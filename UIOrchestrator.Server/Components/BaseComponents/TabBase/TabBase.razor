@namespace Code420.UIOrchestrator.Server.Components.BaseComponents.TabBase

@using Syncfusion.Blazor.Navigations

@*
    Breaking the DRY rules here...

    SfTab allows TabItems to be defined in the Items parameter
    or through ChildContent and, if the Items parameter is used
    below it will take precedence over ChildContent. If the 
    TabItems parameter is not defined (is null), this will result
    in no Tabs being defined.

    Need to duplicate the deployment of SfTab below to handle this
    situation. The first deployment includes the Items=@TabItems line
    where as the second does not.

*@
@if (TabItems is not null)
{
    <!--suppress ALL -->
<SfTab  @ref=@tab
        AllowDragAndDrop=@AllowDragAndDrop
        Animation=@tabAnimationSettings
        DragArea=@DragArea
        EnablePersistence=@EnablePersistence
        HeaderPlacement=@HeaderPlacement
        Items=@TabItems
        LoadOn=@LoadOn
        OverflowMode=@OverflowMode
        ReorderActiveTab=@ReorderActiveTab
        ScrollStep=@ScrollStep
        SelectedItem=@SelectedItem
        ShowCloseButton=@ShowCloseButton

        SelectedItemChanged=@OnSelectedItemChangedHandler

        CssClass=@CssClass
        ID=@CssId
        HtmlAttributes=@HtmlAttributes
        Height=@Height
        Width=@Width
        >

        @ChildContent

        <TabEvents  Added=@Added
                    Adding=@Adding
                    Created=@Created
                    Destroyed=@Destroyed
                    Dragged=@Dragged
                    OnDragStart=@OnDragStart
                    Removed=@Removed
                    Removing=@Removing
                    Selected=@Selected
                    Selecting=@Selecting
                    >
        </TabEvents>

    </SfTab>
}
else
{
    <SfTab  @ref=@tab
            AllowDragAndDrop=@AllowDragAndDrop
            Animation=@tabAnimationSettings
            DragArea=@DragArea
            EnablePersistence=@EnablePersistence
            HeaderPlacement=@HeaderPlacement
            LoadOn=@LoadOn
            OverflowMode=@OverflowMode
            ReorderActiveTab=@ReorderActiveTab
            ScrollStep=@ScrollStep
            SelectedItem=@SelectedItem
            ShowCloseButton=@ShowCloseButton

            SelectedItemChanged=@OnSelectedItemChangedHandler
        
            CssClass=@CssClass
            ID=@CssId
            HtmlAttributes=@HtmlAttributes
            Height=@Height
            Width=@Width
            >

        @ChildContent

        <TabEvents  Added=@Added
                    Adding=@Adding
                    Created=@Created
                    Destroyed=@Destroyed
                    Dragged=@Dragged
                    OnDragStart=@OnDragStart
                    Removed=@Removed
                    Removing=@Removing
                    Selected=@Selected
                    Selecting=@Selecting
                    >
        </TabEvents>

    </SfTab>
}

@*
    To ensure isolation of styling between multiple tab components on a page, prepend the CssClass
    to each selector (assuming the CssClass is not string.Empty).

    Since it is possible for a TabBase to contain a Tab which contains a TabBase the
    method for CSS isolation needs to change from the normal approach.
    
    The normal approach assumes use of the same component on a page is a
    side-by-side application. In the case of parent-child applications the
    CSS for the parent will have greater specificity that the child's CSS since
    a child element (e.g., e-tab-header) is also addressable using the parent's
    CSS class (the .mychild.e-tab .e-tab-header is addressable by .myparent.e-tab e-tab-header).
    Given that the style for the parent comes after the child's style, the parent's
    style ultimately wins out.

    The solution to using the same component in a parent-child scenario is to
    use the direct child relationship in the CSS selectors (.mychild.e-tab .e-tab-header
    is not a direct child of .myparent.e-tab).
    masterCssSelector = .CssClass.e-tab >
*@

<style>

    @* Set the styling for all Tab container children *@
    @(masterCssSelector) * {
        box-sizing: border-box;
        --tab-header-extra-margin: @TabHeaderExtraMargin;
    }

    @* Set the default styling for a Tab Item *@
    @(masterCssSelector) .e-content .e-item{
        color: inherit;
        background-color: inherit;
    }

    @* Set the padding on the left/right sides of Top/Bottom Tab Header. *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical) {
        padding-left: var(--tab-header-extra-margin);
        padding-right: var(--tab-header-extra-margin);
        border-radius: @TabHeaderBorderRadius;
        overflow: hidden;
    }

    @* Set the padding on the top/bottom sides of Left/Right Tab Header. *@
    @(masterCssSelector) .e-tab-header:is(.e-vertical) {
        padding-top: var(--tab-header-extra-margin);
        padding-bottom: var(--tab-header-extra-margin);
        border-radius: @TabHeaderBorderRadius;
        overflow: hidden;
    }


    @* Set the top padding for Top Tab Header *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical):not(.e-horizontal-bottom) {
        padding-top: calc( var(--tab-header-extra-margin) / 2 );
    }

    @* Set the bottom padding for Bottom Tab Header *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical):is(.e-horizontal-bottom) {
        padding-bottom: calc( var(--tab-header-extra-margin) / 2 );
    }

    @* Set the left padding for Left Tab Header *@
    @(masterCssSelector) .e-tab-header.e-vertical-left {
        padding-left: var(--tab-header-extra-margin);
    }

    @* Set the right padding for Right Tab Header *@
    @(masterCssSelector) .e-tab-header.e-vertical-right {
        padding-right: var(--tab-header-extra-margin);
    }
    

    
    @* 
    Set the styling for the border between the Tab Items and the Tab Content. 
    This is applied to the full width of the Tab Header. 
    The Tab Items will change the border style for their individual state.

    This sets the border color and style for all HeaderPosition values.
    The border width is set below based on e-vertical since the side that receives a width changes.
    *@
    @(masterCssSelector) .e-tab-header::before {
        border-color: @TabHeaderBorderColor;
        border-style: @TabHeaderBorderStyle;
        background-color: @TabHeaderBackgroundColor;
        border-width: @tabHeaderBorderWidth;
    }

    @* 
    Adjust the margins for the horizontal ::before element so the edge border
    and background are pushed left/right so the first/last Tab Item borders are
    not right on the edges.
    *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical)::before {
        margin-left: calc( var(--tab-header-extra-margin) * -1 );
        margin-right: var(--tab-header-extra-margin);
    }

    @* 
    Fix for HeaderPosition = Bottom
    The Bootstrap default prevents the ::before background from showing.
    Bootstrap default: bottom: auto;
    *@
    @(masterCssSelector) .e-tab-header.e-horizontal-bottom::before {
        bottom: 0;
    }

    @*
    Fix for HeaderPosition = Bottom
    The Bootstrap default sets to top border that needs to be quashed.
    Bootstrap default: border-top: 1px solid #ddd;
    *@
    @(masterCssSelector) .e-tab-header.e-horizontal-bottom[style*="overflow: hidden"] .e-toolbar-items {
        border-bottom: 0;
        border-top: 0;
    }

    @*
    Fix for HeaderPosition = Bottom
    The Bootstrap default sets to margin so that a stray horizontal line is displayed.
    Bootstrap default: margin-top: -1px;
    *@
    @(masterCssSelector) .e-tab-header.e-horizontal-bottom .e-hscroll-bar {
        margin-top: 0;
    }

    @*
    Fix for HeaderPosition = Right
    The Bootstrap default prevents the ::before background from showing
    Bootstrap default: right: auto;
    *@
    @(masterCssSelector) .e-tab-header.e-vertical-right::before {
        right: 0;
    }

    @*
    Fix for bootstrap overriding the oi setting of the font-family property
    for the icons displayed in the tab header. 
    *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-icon.oi {
        font-family: Icons;
    }

    @*
    Set the styling for the borders around the active Tab Item
    Aggregates the border-width, border-style and border-color applied to e-tab-header
    Adds the appropriate border-radius which is constructed based on HeaderPosition

    Bootstrap defaults:
        border: 1px solid #dee2e6
        border-radius: 4px 4px 0 0 (HeaderPosition = Top)
        border-radius: 0 0 4px 4px; (HeaderPosition = Bottom
        border-radius: 4px 0 0 4px; (HeaderPosition = Left)
    *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item.e-active {
        border: @activeTabBorder;
        border-radius: @activeTabBorderRadius;
    }

    @*
    Set the styling for the edge border for the active Tab Item and is applicable for all HeaderPosition values
    Overrides the border styling set above by forcing the edge border color to the TabItemActiveBottomBorderColor parameter.
    The TabHeaderBorderWidth and TabHeaderBorderStyle parameters are maintained.

    Bootstrap defaults: border-bottom: 1px solid #fff

    Selectors:
        not(.e-vertical) & not(.e-horizontal-bottom) for Top
        not(.e-vertical) & is(.e-horizontal-bottom) for Bottom
        .e-vertical-left for Left
        .e-vertical-right for Right
    *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical):not(.e-horizontal-bottom) .e-toolbar-item.e-active {
        border-bottom: @activeTabBottomBorder;
    }
    @(masterCssSelector) .e-tab-header:not(.e-vertical):is(.e-horizontal-bottom) .e-toolbar-item.e-active {
        border-top: @activeTabBottomBorder;
    }
    @(masterCssSelector) .e-tab-header.e-vertical-left .e-toolbar-item.e-active {
        border-right: @activeTabBottomBorder;
    }
    @(masterCssSelector) .e-tab-header.e-vertical-right .e-toolbar-item.e-active {
        border-left: @activeTabBottomBorder;
    }

    @*
    Set the styling for the border of individual Tab Items in the inactive, hovered state.
    This sets the border width for the three non-edge borders and is applicable to all HeaderPosition values

    The styling for the edge border is overridden to prevent text shift due to change in border size

    Bootstrap defaults:
        background: transparent;
        border: 1px solid #e9ecef;
        border-radius: 4px 4px 0 0;

    Selectors:
        not(.e-vertical for Top & Bottom (set left and right borders)
        not(.e-vertical) & not(.e-horizontal-bottom) for Top
        not(.e-vertical) & is(.e-horizontal-bottom) for Bottom

        is(.e-vertical) for Left and Right (set top and bottom borders)
        is(e-vertical-left) for Left 
        is(e-vertical-right) for Right
    *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-left: @inactiveTabBorderHoveredBorders;
        border-right: @inactiveTabBorderHoveredBorders;
        border-radius: @activeTabBorderRadius;
    }
    @(masterCssSelector) .e-tab-header:not(.e-vertical):not(.e-horizontal-bottom) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-top: @inactiveTabBorderHoveredBorders;
        border-bottom-color: transparent;                   /* Use this to prevent text shift due to change in border size */
    }
    @(masterCssSelector) .e-tab-header:not(.e-vertical):is(.e-horizontal-bottom) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-bottom: @inactiveTabBorderHoveredBorders;
        border-top-color: transparent;                      /* Use this to prevent text shift due to change in border size */
    }

    @(masterCssSelector) .e-tab-header:is(.e-vertical) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-top: @inactiveTabBorderHoveredBorders;
        border-bottom: @inactiveTabBorderHoveredBorders;
        border-radius: @activeTabBorderRadius;
    }
    @(masterCssSelector) .e-tab-header:is(.e-vertical-left) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-left: @inactiveTabBorderHoveredBorders;
        border-right-color: transparent;                    /* Use this to prevent text shift due to change in border size */
    }
    @(masterCssSelector) .e-tab-header:is(.e-vertical-right) .e-toolbar-item:not(.e-active) .e-tab-wrap:hover {
        border-right: @inactiveTabBorderHoveredBorders;
        border-left-color: transparent;                     /* Use this to prevent text shift due to change in border size */
    }
    

    @*
    Set the styling for the borders around the active Tab Item
    Aggregates the border-width, border-style and border-color applied to e-tab-header

    Adds the appropriate border-radius which is constructed based on HeaderPosition

    Bootstrap defaults:
        margin: 0 2px 0 0;  (HeaderPosition = Top/Bottom)
    *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item:not(.e-separator) {
        margin: @tabItemMargin;
    }

    
    @*
    Set the height for the Tab Items
    This requires a couple steps. 
    The first overrides the Bootstrap min-height (in case the desired height is smaller than the default min-height).
    The second step is to set the desired height.

    Bootstrap defaults:
        height: 32px;
        min-height: 32px;
    *@
    @(masterCssSelector) .e-tab-header:not(.e-vertical),
    @(masterCssSelector) .e-tab-header:not(.e-vertical) .e-toolbar-items,
    @(masterCssSelector) .e-tab-header:not(.e-vertical) .e-scroll-nav,
    @(masterCssSelector) .e-tab-header .e-toolbar-item:not(.e-separator) {
      min-height: @TabItemHeight;
    }

    @(masterCssSelector) .e-tab-header:not(.e-vertical) .e-toolbar-items,
    @(masterCssSelector) .e-tab-header:not(.e-vertical) .e-scroll-nav,
    @(masterCssSelector) .e-tab-header .e-toolbar-item:not(.e-separator),
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-wrap,
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-wrap .e-text-wrap  {
      height: @TabItemHeight;
    }


     @* 
     Set the styling for the active Tab Item text when focused. 
     
     Override bootstrap styling:
     .e-tab.e-focused > .e-tab-header .e-toolbar-item .e-tab-wrap:focus {
      background: #eee;
      border: 1px solid rgba(0,0,0,0);
    *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-wrap:focus {
        background: inherit;
    }
        
    @* Set the styling for the inactive Tab Item text. *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-wrap {
        font-size: @TabTextInactiveFontSize;
        font-weight: @TabTextInactiveFontWeight;
        color: @TabTextInactiveFontColor;
    }

    @* Set the styling for the active Tab Item text *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item.e-active .e-tab-wrap .e-tab-text {
        font-size: @TabTextActiveFontSize;
        font-weight: @TabTextActiveFontWeight;
        color: @TabTextActiveFontColor;
    }

    @* Set the styling for the inactive Tab Item text when hovered. *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item .e-tab-wrap:hover .e-tab-text {
        font-size: @TabTextInactiveHoveredFontSize;
        font-weight: @TabTextInactiveHoveredFontWeight;
        color: @TabTextInactiveHoveredFontColor;
    }

    @* Set the styling for the active Tab Item text when hovered *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item.e-active .e-tab-wrap:hover .e-tab-text {
        font-size: @TabTextActiveHoveredFontSize;
        font-weight: @TabTextActiveHoveredFontWeight;
        color: @TabTextActiveHoveredFontColor;
    }


    @* Set the padding for Tab Item text elements *@
    @(masterCssSelector) .e-tab-header .e-toolbar-item.e-active .e-tab-wrap .e-tab-text {
        padding: @TabTextPadding;
    }


    @* Set the styling for the scroll bar buttons *@
    @(masterCssSelector) .e-tab-header .e-toolbar-items.e-hscroll .e-scroll-nav {
        background: @ScrollButtonNormalBackground;
        border-radius: @ScrollButtonBorderRadius;
        width: @TabItemHeight;
    }

    @(masterCssSelector) .e-tab-header .e-scroll-nav .e-nav-arrow {
        height: @TabItemHeight;
        line-height: @TabItemHeight;
        width: @TabItemHeight;
    }

    @(masterCssSelector) .e-tab-header .e-hscroll:not(.e-scroll-device) .e-scroll-nav .e-nav-arrow {
        color: @ScrollButtonNormalFontColor;
    }


    @*
    Fix for HeaderPosition = Top/Bottom
    The Bootstrap default sets the padding for the Scroll Buttons to 32px which needs to be overridden.
    Bootstrap default: padding: 0 32px;
    *@
    @(masterCssSelector) .e-hscroll:not(.e-scroll-device) {
        padding-top: 0;
        padding-bottom: 0;
        padding-right: @TabItemHeight;
        padding-left: @TabItemHeight;
    }

    @* Set the styling for the scroll bar button's icon *@
    @(masterCssSelector) .e-tab-header .e-scroll-nav .e-nav-left-arrow::before, 
    @(masterCssSelector) .e-tab-header .e-scroll-nav .e-nav-right-arrow::before {
        font-size: @ScrollButtonFontSize;
        line-height: @TabItemHeight;
    }


    @* Set the styling for the scroll bar button's icon when hovered *@
    @(masterCssSelector) .e-tab-header .e-scroll-nav .e-nav-arrow:hover, 
    @(masterCssSelector) .e-tab-header .e-hscroll:not(.e-scroll-device) .e-scroll-nav .e-nav-arrow:hover {
        background: @ScrollButtonHoveredBackground;
        color: @ScrollButtonHoveredFontColor;
    }
    
</style>