@namespace Code420.UIOrchestrator.Server.Components.CompositeComponents.HelpSystem.UserLogin.Password

@using Code420.UIOrchestrator.Server.Components.CompositeComponents.HelpButton;
@using Code420.UIOrchestrator.Server.Components.BaseComponents.ButtonBase;
@using Code420.UIOrchestrator.Server.Components.BaseComponents.DialogBoxBase;

<HelpButton @ref=helpButtonComponent
            ButtonDisabled=@HelpButtonDisabled
            ButtonMargin="2.5em 0px 0px 1em"
            ButtonPadding="0px"
            CssClass="help__user-login-password"
            >
    <TooltipContent>
        @* 
        The HelpButton component provides standardized base stying.
        If additional styling is required for the tooltip contents,
        it is best to do so using inline styles though using a <style /> 
        section is also possible.
        *@
        <div class="container__tooltip-rmt">
            <div class="header__tooltip-rmt">
                <p class="header-title__tooltip-rmt"> Register Metrc Tags</p>
                <p class="header-subtitle__tooltip-rmt"> Specify a range of consecutive Metrc tag numbers to be registered in the database</p>
            </div>
            <div class="content__tooltip-rmt">
                <article class="card__tooltip-rmt">
                    <h3 class="content-title__tooltip-rmt">Beginning Tag</h3>
                    <p>Enter the 24-digit number of the first tag in the series of Metrc tags to be registered in the database.</p>
                </article>
                <article class="card__tooltip-rmt">
                    <h3 class="content-title__tooltip-rmt">Ending Tag</h3>
                    <p>Enter the 24-digit number of the last tag in the series of Metrc tags to be registered in the database.</p>
                </article>
                <article class="card__tooltip-rmt">
                    <h3 class="content-title__tooltip-rmt"><span class="icon__tooltip-rmt oi oi-cog"></span>Metrc Tag Configuration</h3>
                    <p>Hover over the icon to access additional information. </p>
                </article>
                <article class="card__tooltip-rmt">
                    <h3 class="content-title__tooltip-rmt">Register Tags As</h3>
                    <p>Indicates if the Metrc tags will be registered as active (available for use) or inactive.</p>
                </article>
            </div>
            <div class="footer__tooltip-rmt">
                <ButtonBase @ref=buttonLearnMore
                            IsPrimary=true
                            TextFontSize="1em"

                            OnClick=@(async (e) => await LearnMoreButtonClickAsync(e))
                                
                            CssClass="button__tooltip-rmt"
                            Padding="4px 8px"
                            >
                    <ContentFragment>
                        Learn More
                    </ContentFragment>
                </ButtonBase>
            </div>
        </div>

    </TooltipContent>

</HelpButton>

<!--
    The DialogBoxBase component is shown when the user clicks the Learn More button in the
    tooltip. The HeaderFragment, FooterFragment and ContentFragment are customized for the help system.

    1:  The Target parameter must match the CSS Id of an HTML element (usually a div) on the page and
        the dialog box will be sized to fit in the element.
    2:  Display of the dialog is controlled by the LearnMoreButtonClick() event handler and the 
        OnDialogClose() event handler. Each will invoke the dial box's SetVisibility() method to
        show/hide the dialog box.
    3.  This is a modal dialog box using the default OverlayBackgroundColor and OverlayOpacity
    4.  Suppress the default DialogBorder and override the DialogBorderRadius
    5.  Set the header, footer and content styling to match the CodePen
-->
<DialogBoxBase  @ref=dialogLearnMore
                    
                IsModal=true

                OnClose=@(async () => await OnDialogCloseAsync())

                CssClass="dialog-rmt"
                Height="300px"
                Width="500px"

                DialogBaseFontSize="12px"
                DialogBorder="none"
                DialogBorderRadius="4px"

                HeaderFontSize="1.25em"
                HeaderFontWeight="bold"
                HeaderLineHeight="1.25"
                HeaderFontColor="var(--dialog-help__title-font-color)"
                HeaderPadding="0.5em 1em"
                HeaderBackgroundColor="var(--dialog-help__header-background-color)"
                HeaderBottomBorder="none"
                HeaderBorderRadius="4px 4px 0px 0px"

                ContentFontSize="1em"
                ContentPadding="0px"
                ContentBackgroundColor="var(--dialog-help__background-color)"

                FooterPadding=".5em"
                FooterBackgroundColor="var(--dialog-help__header-background-color)"
                FooterTopBorder="none"
                FooterBorderRadius="0px 0px 4px 4px"
                >
    <HeaderFragment>
        Register Metrc Tags
    </HeaderFragment>
    <ContentFragment>
        <!--
            The dialog content section HTML is comprised of:
                1:  A container class encapsulating the content.
                    The ContentFontSize parameter is relative to the DialogBaseFontSize parameter and is used by child elements.
                2:  A series of articles are defined that encapsulate the the main content sections.
                    The sections are: Overview, Best Practices and Details
                    Each article contains a title and paragraph.
                3.  Some Details article contain child elements subsections providing information for discrete topics
                4.  All articles are styled by the <style /> section below
        -->
        <div class="content__dialog-rmt">
                <article class="card__dialog-rmt">
                    <h3 class="content-title__dialog-rmt">Overview</h3>
                    <p>
                        Allows the user to register a consecutive series of Metrc tags in the database.
                        The tags can be registered as active, meaning they are available for use, or inactive,
                        meaning they are recorded in the database but will not be available for use until activated.
                    </p>
                </article>
                <article class="card__dialog-rmt">
                    <h3 class="content-title__dialog-rmt">Best Practice</h3>
                    <p>
                        It is recommended that Metrc tags are registered as inactive until needed for use.
                        A list of available tags (active and not previously used) is presented to a user
                        when a produced item is recorded in the program. To keep this list manageable for
                        the user, it is best to register a series of Metrc tags as inavtive until needed.
                    </p>
                </article>
                <article class="card__dialog-rmt">
                    <h3 class="content-title__dialog-rmt">Details</h3>
                    <article class="card-section__dialog-rmt">
                        <h3 class="content-section-title__dialog-rmt">Beginning/Ending Tag</h3>
                        <p>
                            Enter the 24-character Metrc tag number for the first and last tags in the
                            series of tags to be recorded in the database. Depending on the setting of
                            the Metrc Tag Configuration, the full 24-character tag number may be needed,
                            of just the last few characters.
                        </p>
                    </article>
                    <article class="card-section__dialog-rmt">
                        <h3 class="content-section-title__dialog-rmt">Metrc Tag Configuration</h3>
                        <p>
                            Click the icon to open a dialog in which the settings controlling how Metrc
                            tag are entered. The icon is available on various screens and display the
                            current settings. Changes are retained and applied from this point forward.
                            Hover over the icon to access the help system decribing the available settings.
                        </p>
                    </article>
                    <article class="card-section__dialog-rmt">
                        <h3 class="content-section-title__dialog-rmt">Register Tags As</h3>
                        <p>
                            The toggle switch aloows you to specify if the series of Metrc tags are saved
                            in the database as active or inactive.
                        </p>
                    </article>
                    <article class="card-section__dialog-rmt">
                        <h3 class="content-section-title__dialog-rmt">Register Tags Button</h3>
                        <p>
                            Execute the process of registering the consecutive series of Metrc tags in the
                            database.
                        </p>
                    </article>
                    <article class="card-section__dialog-rmt">
                        <h3 class="content-section-title__dialog-rmt">Undo Tag Registration</h3>
                        <p>
                            Execute the process of reversing the last tag registration process. The button
                            is diabled until a tag registration process is successfully completed.
                        </p>
                    </article>
                </article>
        </div>
    </ContentFragment>
    <FooterFragment>
        <!--
            The footer is a simple div that is styled by the <style /> below
        -->
        <div class="footer__dialog-rmt"></div>
    </FooterFragment>

</DialogBoxBase>


<style>

    /* 
        Styling for the tooltip render fragments.
        Use em units in styling so that font sizes are controlled by the
            HelpButtonComponent's ContentFontSize parameter which is applied
            to the container__tooltip-rmt class.
        Use the container__tooltip-rmt width to set the width of the tooltip.

    */

    p {
        line-height: 1.1;
        color: black;
        margin-bottom: 0;
    }

    .container__tooltip-rmt {
        width: 300px;           /* dictates size of the tooltip */
        overflow: hidden;
    }

    .header__tooltip-rmt {
        padding: 0.5em 1em;
        background-color: var(--tooltip-help__background-color);
        border-radius: 4px 4px 0 0;
    }

    .header-title__tooltip-rmt {
        font-size: 1.25em;
        font-weight: bold;
        line-height: 1.25;
        color: var(--tooltip-help__header-font-color);
        margin-bottom: .5em;
    }

    .header-subtitle__tooltip-rmt {
        font-size: 1em;
        line-height: 1.25;
        color: var(--tooltip-help__header-font-color);
    }

    .card__tooltip-rmt {
        padding: 0.75em 1em;
        background-color: var(--tooltip-help__background-color);
        border-bottom: 1px solid var(--tooltip-help__bottom-border-color);
    }

    .card__tooltip-rmt:last-child {
        border-bottom: none;
    }

    .content-title__tooltip-rmt {
        font-size: 1.25em;
        font-weight: 600;
        color: var(--tooltip-help__title-font-color);
        margin-bottom: 0.5em;
    }

    .card__tooltip-rmt p {
        font-size: 1em;
    }

    .icon__tooltip-rmt {
        display: inline-block;
        height: 1.5em;
        width: 1.5em;
        font-size: 1em;
        color: var(--dialog-help__icon-font-color);
        margin-right: 0.25em;
        padding: .25em 0 0 .25em;
        background-color: var(--button-std__normal--background-color);
        border-radius: 50%;
    }

    .footer__tooltip-rmt {
        display: flex;
        justify-content: center;
        padding: .75em;
        background-color: var(--tooltip-help__background-color);
        border-radius: 0 0 4px 4px;
    }


    /* 
        Styling for the dialog box render fragments.

    */


    .card__dialog-rmt {
        padding: 0.75em 1em;
        background-color: var(--dialog-help__background-color);
    }

    .content-title__dialog-rmt {
        display: flex;
        align-items: flex-start;
        text-align: left;
        font-size: 1.25em;
        font-weight: 600;
        color: var(--dialog-help__title-font-color);
        margin-bottom: 0.5em;
    }

    .content-title__dialog-rmt::after {
        content: "";
        flex-grow: 1;
        height: 1px;
        background: var(--dialog-help__title-font-color);
        min-width: 20px;
        margin: auto auto auto 0.5em;
    }

    .card__dialog-rmt p {
        font-size: 1em;
    }

    .card-section__dialog-rmt {
        padding: 0 1em 0.75em 1em;
        background-color: var(--dialog-help__background-color);
    }

    .content-section-title__dialog-rmt {
        display: flex;
        align-items: flex-start;
        text-align: left;
        font-size: 1.1em;
        font-weight: 600;
        color: var(--dialog-help__subtitle-font-color);
    }

    .content-section-title__dialog-rmt::after {
        content: "";
        flex-grow: 1;
        height: 1px;
        background: var(--dialog-help__subtitle-font-color);
        min-width: 20px;
        margin: auto auto auto 0.5em;
    }

    .card-section__dialog-rmt p {
        font-size: 1em;
    }

    .footer__dialog-rmt {
        height: 1em;
    }

</style>